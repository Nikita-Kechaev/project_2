# Generated by Django 3.2.14 on 2022-09-23 11:45

import api.managers
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'Пользователь с таким email уже существует.'}, max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email адрес')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Фамилия')),
                ('role', models.CharField(choices=[('ADMIN', 'Администратор'), ('MODERATOR', 'Модератор'), ('USER', 'Пользователь')], default='USER', max_length=60, verbose_name='Роль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', api.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='текст комментария')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='дата публикации')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'комментарий',
                'verbose_name_plural': 'комментарии',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=255, verbose_name='загаловок')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='дата публикации')),
                ('rating', models.IntegerField(verbose_name='рейтинг галереи')),
                ('file', models.FileField(upload_to='GalleryFiles/', verbose_name='файл галереи')),
                ('image', models.FileField(blank=True, upload_to='GalleryImage/', verbose_name='изображение')),
                ('photo', models.FileField(blank=True, upload_to='GalleryPhoto/', verbose_name='фото')),
                ('banner', models.FileField(blank=True, upload_to='GalleryBanners/', verbose_name='обложка')),
                ('video', models.FileField(blank=True, upload_to='GalleryVideo/', verbose_name='видео')),
                ('short_description', models.TextField(verbose_name='описние галереи')),
                ('soft', models.CharField(blank=True, max_length=255, verbose_name='софт')),
                ('type', models.CharField(blank=True, max_length=255, verbose_name='тип')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleries', to=settings.AUTH_USER_MODEL, verbose_name='автор')),
            ],
            options={
                'verbose_name': 'галерея',
                'verbose_name_plural': 'галереи',
            },
        ),
        migrations.CreateModel(
            name='GalleryFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, verbose_name='тип')),
                ('file', models.FileField(upload_to='GalleryFiles', verbose_name='загружаемый файл для галлереи')),
            ],
            options={
                'verbose_name': 'файл для галлереи',
                'verbose_name_plural': 'файлы для галлереи',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=255, verbose_name='загаловок')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='дата публикации')),
                ('rating', models.IntegerField(verbose_name='рейтинг журнала')),
                ('file', models.FileField(blank=True, upload_to='JournalFiles/', verbose_name='файл журнала')),
                ('image', models.FileField(blank=True, upload_to='JournalImages/', verbose_name='изображние журнала')),
                ('banner', models.FileField(blank=True, upload_to='JournalBanners/', verbose_name='баннер журнала')),
                ('description', models.TextField(verbose_name='описние журнала')),
                ('short_description', models.TextField(verbose_name='краткое описание журнала')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journals', to=settings.AUTH_USER_MODEL, verbose_name='автор')),
            ],
            options={
                'verbose_name': 'журнал',
                'verbose_name_plural': 'журналы',
            },
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=255, verbose_name='загаловок')),
                ('heading', models.CharField(max_length=255, verbose_name='рубрика')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='дата публикации')),
                ('rating', models.IntegerField(default=0, verbose_name='рейтинг новости')),
                ('banner', models.FileField(blank=True, upload_to='NewBanners/', verbose_name='баннер новости')),
                ('description', models.TextField(verbose_name='описние новости')),
                ('soft', models.CharField(blank=True, max_length=255, verbose_name='софт')),
            ],
            options={
                'verbose_name': 'новость',
                'verbose_name_plural': 'новости',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, verbose_name='тег')),
            ],
            options={
                'verbose_name': 'тег',
                'verbose_name_plural': 'теги',
            },
        ),
        migrations.CreateModel(
            name='NewTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.new')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tag')),
            ],
            options={
                'verbose_name': 'Теги новости',
                'verbose_name_plural': 'Теги новостей',
                'unique_together': {('tag', 'new')},
            },
        ),
        migrations.CreateModel(
            name='NewReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='оценка: 1 - 5')),
                ('new', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.new', verbose_name='новость')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newreviews', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'ревью к галерее',
                'verbose_name_plural': 'ревью к новости',
            },
        ),
        migrations.CreateModel(
            name='NewComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.comment', verbose_name='комментарий')),
                ('new', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.new', verbose_name='новость')),
            ],
            options={
                'verbose_name': 'комментарий к новости',
                'verbose_name_plural': 'комментарии к новости',
            },
        ),
        migrations.AddField(
            model_name='new',
            name='comments',
            field=models.ManyToManyField(through='api.NewComment', to='api.Comment', verbose_name='комментарии новости'),
        ),
        migrations.AddField(
            model_name='new',
            name='tags',
            field=models.ManyToManyField(through='api.NewTag', to='api.Tag', verbose_name='Теги новостей'),
        ),
        migrations.CreateModel(
            name='JournalTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.journal')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tag')),
            ],
            options={
                'verbose_name': 'теги журналов',
                'verbose_name_plural': 'теги журналов',
                'unique_together': {('tag', 'journal')},
            },
        ),
        migrations.CreateModel(
            name='JournalReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='оценка: 1 - 5')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.journal', verbose_name='журнал')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journalreviews', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'ревью к журналу',
                'verbose_name_plural': 'ревью к журналу',
            },
        ),
        migrations.CreateModel(
            name='JournalComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.comment', verbose_name='комментарий')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.journal', verbose_name='журнал')),
            ],
            options={
                'verbose_name': 'комментарий к журналу',
                'verbose_name_plural': 'комментарии к журналу',
            },
        ),
        migrations.AddField(
            model_name='journal',
            name='comments',
            field=models.ManyToManyField(through='api.JournalComment', to='api.Comment', verbose_name='комментарии журнала'),
        ),
        migrations.AddField(
            model_name='journal',
            name='tags',
            field=models.ManyToManyField(blank=True, through='api.JournalTag', to='api.Tag', verbose_name='Теги новостей'),
        ),
        migrations.CreateModel(
            name='GalleryReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='оценка: 1 - 5')),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.gallery', verbose_name='журнал')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleryreviews', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'ревью к галерее',
                'verbose_name_plural': 'ревью к галерее',
            },
        ),
        migrations.CreateModel(
            name='GalleryComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.comment', verbose_name='комментарий')),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.gallery', verbose_name='галерея')),
            ],
            options={
                'verbose_name': 'комментарий к галерее',
                'verbose_name_plural': 'комментарии к галерее',
            },
        ),
        migrations.AddField(
            model_name='gallery',
            name='comments',
            field=models.ManyToManyField(through='api.GalleryComment', to='api.Comment', verbose_name='комментарии галереи'),
        ),
    ]
